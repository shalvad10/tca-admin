{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let ComponentBase = /*#__PURE__*/(() => {\n  class ComponentBase {\n    constructor(changeRef) {\n      this.changeRef = changeRef;\n      this.onAction = new EventEmitter(); // Languages.instance.registerListener(this);\n      // Styles.instance.registerListener(this);\n    }\n\n    ngOnDestroy() {// Languages.instance.unregisterListener(this);\n    }\n\n    getWord(key) {// return Languages.instance.getWord(key);\n    }\n\n    detectChanges() {\n      if (this.changeRef['destroyed'] == false) {\n        this.changeRef.detectChanges();\n      }\n    }\n\n    select(lang) {// Languages.instance.selectLanguage(lang);\n    }\n\n    get selectedLanguage() {\n      return ''; //Languages.instance.selected;\n    }\n\n    getBackground(name) {\n      return {\n        \"background-color\": ''\n        /*Styles.instance.getStyle(name)*/\n\n      };\n    }\n\n    getColor(name) {\n      return {\n        \"color\": ''\n        /* Styles.instance.getStyle(name)*/\n\n      };\n    }\n\n    getBorder(name) {\n      return {\n        \"border-color\": ''\n        /*Styles.instance.getStyle(name)*/\n\n      };\n    }\n\n    getRawColor(name) {\n      return ''; // Styles.instance.getStyle(name);\n    }\n\n    onStyleChange(style) {\n      this.changeRef.detectChanges();\n    }\n\n    onLanguageChange(lang) {\n      this.changeRef.detectChanges();\n    }\n\n    emitAction(event, data = null) {\n      this.onAction.emit({\n        action: event,\n        data: data\n      });\n    }\n\n    bubbleAction(e) {\n      this.onAction.emit(e);\n    }\n\n  }\n\n  ComponentBase.ɵfac = function ComponentBase_Factory(t) {\n    return new (t || ComponentBase)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  ComponentBase.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ComponentBase,\n    selectors: [[\"ng-component\"]],\n    outputs: {\n      onAction: \"onAction\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function ComponentBase_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return ComponentBase;\n})();","map":null,"metadata":{},"sourceType":"module"}