{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SectionsService = /*#__PURE__*/(() => {\n  class SectionsService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    create(name, token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.post(`${environment.connectionURL}/ResponsiblePersonsGroups`, {\n        name: name\n      }, {\n        headers: headers\n      });\n    }\n\n    delete(id, token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.delete(`${environment.connectionURL}/ResponsiblePersonsGroups/${id}`, {\n        headers: headers\n      });\n    }\n\n    getAll(token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.get(`${environment.connectionURL}/ResponsiblePersonsGroups`, {\n        headers: headers\n      });\n    }\n\n    getAllWithData(token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.get(`${environment.connectionURL}/ResponsiblePersonsGroups/CurrentUseOfSection`, {\n        headers: headers\n      });\n    }\n\n    getSingle(ID, token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.get(`${environment.connectionURL}/ResponsiblePersonsGroups/${ID}`, {\n        headers: headers\n      });\n    }\n\n    edit(name, users, id, token = '') {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.put(`${environment.connectionURL}/sections/edit`, {\n        sectionName: name,\n        users: users,\n        id: id\n      }, {\n        headers: headers\n      });\n    }\n\n  }\n\n  SectionsService.ɵfac = function SectionsService_Factory(t) {\n    return new (t || SectionsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  SectionsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SectionsService,\n    factory: SectionsService.ɵfac,\n    providedIn: 'root'\n  });\n  return SectionsService;\n})();","map":null,"metadata":{},"sourceType":"module"}