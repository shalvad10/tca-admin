{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CompanyService = /*#__PURE__*/(() => {\n  class CompanyService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    create(code, name, days, token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.post(`${environment.connectionURL}/Companies`, {\n        identificationCode: code,\n        name: name,\n        defaultDaysBeforeNotifiWarning: days\n      }, {\n        headers: headers\n      });\n    }\n\n    delete(id, token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.delete(`${environment.connectionURL}/Companies/${id}`, {\n        headers: headers\n      });\n    }\n\n    getAll(token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      headerSettings['Content-Type'] = `application/json; charset=utf-8`;\n      headerSettings['Accept'] = `*/*`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.get(`${environment.connectionURL}/Companies`, {\n        headers: headers\n      });\n    }\n\n    getSingle(id, token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      headerSettings['Content-Type'] = `application/json; charset=utf-8`;\n      headerSettings['Accept'] = `*/*`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.get(`${environment.connectionURL}/Companies/${id}`, {\n        headers: headers\n      });\n    }\n\n    edit(idCode, name, id, days, token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.put(`${environment.connectionURL}/Companies`, {\n        identificationCode: idCode,\n        name: name,\n        defaultDaysBeforeNotifiWarning: days,\n        id: id\n      }, {\n        headers: headers\n      });\n    }\n\n  }\n\n  CompanyService.ɵfac = function CompanyService_Factory(t) {\n    return new (t || CompanyService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CompanyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CompanyService,\n    factory: CompanyService.ɵfac,\n    providedIn: 'root'\n  });\n  return CompanyService;\n})();","map":null,"metadata":{},"sourceType":"module"}