{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MagazinesService = /*#__PURE__*/(() => {\n  class MagazinesService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getStore(id, token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.get(`${environment.connectionURL}/Magazines/${id}`, {\n        headers: headers\n      });\n    }\n\n    getAll(token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.get(`${environment.connectionURL}/Magazines`, {\n        headers: headers\n      });\n    }\n\n    create(idCode, name, email, contactNumber, address, token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.post(`${environment.connectionURL}/Magazines`, {\n        identificationCode: idCode,\n        name: name,\n        email: email,\n        contactNumber: contactNumber,\n        address: address\n      }, {\n        headers: headers\n      });\n    }\n\n    delete(id, token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.delete(`${environment.connectionURL}/Magazines/${id}`, {\n        headers: headers\n      });\n    }\n\n    getByID(id, token) {\n      console.warn(id);\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.get(`${environment.connectionURL}/Magazines/${id}`, {\n        headers: headers\n      });\n    }\n\n    edit(id, idCode, name, email, contactNumber, address, token) {\n      let headerSettings = {};\n      headerSettings['Authorization'] = `Bearer ${token}`;\n      let headers = new HttpHeaders(headerSettings);\n      return this.http.put(`${environment.connectionURL}/Magazines`, {\n        id: id,\n        identificationCode: idCode,\n        name: name,\n        email: email,\n        contactNumber: contactNumber,\n        address: address\n      }, {\n        headers: headers\n      });\n    }\n\n  }\n\n  MagazinesService.ɵfac = function MagazinesService_Factory(t) {\n    return new (t || MagazinesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  MagazinesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MagazinesService,\n    factory: MagazinesService.ɵfac,\n    providedIn: 'root'\n  });\n  return MagazinesService;\n})();","map":null,"metadata":{},"sourceType":"module"}